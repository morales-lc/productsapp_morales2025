
// AppBar
body: ListView.builder(
controller: _SC,
itemCount: _songs.length,
itemBuilder: (context, index) {
},
return ListTile(
//Delete
onLongPress: () async {
},
leading: Icon(Icons.audiotrack_rounded),
trailing: IconButton(
//Redirect to Edit Form
onPressed: () {},
icon: Icon(Icons.edit_note_rounded),
), // IconButton
title: Text(_songs[index]['title']),
subtitle: Text(_songs[index]['year_released'].toString()), ); // ListTile
), // ListView.builder



//Delete
onLongPress: () async {
bool? result = await showDialog(
);
context: context,
builder: (context) => _deleteDialog(),
},


_deleteDialog() {
return AlertDialog(
title: Text("Deleting Song ..."),
content: const Text('Are you sure to this song?'),
actions: [
//Yes
TextButton(
onPressed: () {
},
Navigator.of (context).pop(true);
child: const Text('Yes'),
), // TextButton
//No
TextButton(
onPressed: () {
},
// Close the dialog
Navigator.of (context).pop(false);
child: const Text('No'),
), // TextButton
); // AlertDialog
}



Future<void> _deleteSong(var id) async {
//Change URL
final res = await http.delete(
);
Uri.parse("http://192.168.132.70:8000/api/songs/$id"),
if (res.statusCode != 204) {
}
throw Exception('Failed to delete song');